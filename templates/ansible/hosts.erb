# Create an OSEv3 group that contains the masters and nodes groups
[OSEv3:children]
masters
nodes

# Set variables common for all OSEv3 hosts
[OSEv3:vars]
# SSH user, this user should allow ssh based auth without requiring a password
ansible_ssh_user=root

# If ansible_ssh_user is not root, ansible_sudo must be set to true
#ansible_sudo=true

# To deploy origin, change deployment_type to origin
deployment_type=<%= scope['::openshift3::deployment_type'] %>

# enable htpasswd authentication
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/openshift/openshift-passwd'}]

# host group for masters
[masters]
<% scope['::openshift3::masters'].each do |vmname, vmdata| -%>
<%= "#{vmname}.#{@domain}" %>
<% end -%>

# host group for nodes, includes region info
[nodes]
<% scope['::openshift3::masters'].each do |vmname, vmdata| -%>
<%= "#{vmname}.#{@domain} openshift_node_labels=\"{'region': 'infra', 'zone': 'default'}\""%>
<% end -%>
<%= @fqdn %> openshift_node_labels="{'region': 'infra', 'zone': 'default'}"

#<% scope['::openshift3::nodes'].each do |vmname, vmdata| -%>
#<%   if vmdata['running'] -%>
#<%=   "#{vmname}.#{@domain} openshift_node_labels='#{vmdata['labels'].to_json}'" %>
#<%   end -%>
#<% end -%>

#<%= @master_fqdn %> openshift_node_labels="{'region': 'infra', 'zone': 'default'}"
##node1.example.com openshift_node_labels="{'region': 'primary', 'zone': 'east'}"
##node2.example.com openshift_node_labels="{'region': 'primary', 'zone': 'west'}"
